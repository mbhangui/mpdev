%undefine _missing_build_ids_terminate_build
%global _unpackaged_files_terminate_build 1
%global debug_package %{nil}

%if %{defined _project}
# define if building on openSUSE build service
%global build_on_obs       1
%global reconfigure_mode   0
%else
%define _project           local
%global build_on_obs       0
%global reconfigure_mode   0
%global _hardened_build    1
%endif
%global _prefix            /usr
%global sysconfdir         @sysconfdir@
%global logdir             /var/log/svc/mpdev

Name: mpdev
Version: @version@
Release: @release@%{?dist}
Summary: MPD Event Watcher
%if %build_on_obs == 1
License: GPL-3.0+
%else
License: GPLv3
%endif
URL: https://github.com/mbhangui/mpdev
Source0: http://downloads.sourceforge.net/%{name}/%{name}-%{version}.tar.gz

%if %build_on_obs == 1
%if 0%{?suse_version}
BuildRequires: -post-build-checks
#!BuildIgnore: post-build-checks  
%endif
%endif
BuildRequires: libqmail-devel libqmail
%if %{defined suse_version} || %{defined sles_version}
BuildRequires: libsqlite3-0 sqlite3-devel
%else
BuildRequires: sqlite-libs sqlite-devel
%endif
Requires: user(qmaill)
Requires: group(nofiles)
Requires: /usr/bin/mpd /usr/bin/mpc /usr/bin/sqlite3 daemontools coreutils

%description
mpdev is a daemon, written in C, that watches a Music Player Daemon events,
using mpd's idle command and execs user defined script on event changes.

 * Uses mpd's idle mode.
 * Calls user $HOME/bin/player
 * Sets special environment variables to pass data to the hooks.
 * Optional support for scrobbling to last.fm, libre.fm through external scripts
 * Included scripts:
   - scrobbler
     + librefm-scrobbler
     + lastfm-scrobbler
   - player
     + saves song data to a sqlite database
     + tracks play count of songs, artist, albums and genres.
     + helps chose songs based on listening habits using mpdplaylist
       playlist generator
     + synchronizes rompr, stats and mpd's sticker db

%prep
%autosetup

%build
%configure --prefix=%{_prefix} --sysconfdir=/etc/mpdev \
  --libexecdir=%{_prefix}/libexec/mpdev
%{__make} -s %{?_smp_mflags}
(
echo "---------------- INFORMATION ------------------------"
echo target         %_target
echo target_alias   %_target_alias
echo target_cpu     %_target_cpu
echo target_os      %_target_os
echo target_vendor  %_target_vendor
echo Project        %{_project}
echo Building %{name}-%{version}-%{release} Build %{_build} OS %{_os}
echo "------------------------------------------------------"
) > %{name}-rpm.info

%install
%{__make} -s DESTDIR=%{buildroot} install-strip
%{__mkdir_p} %{buildroot}%{sysconfdir}
install -m 0644 %{name}-rpm.info %{buildroot}%{sysconfdir}/%{name}-rpm.info

%files
%dir %attr(755,root,root)               %{_prefix}/libexec/mpdev
%ghost %dir %attr(0755,qmaill,nofiles)  %{logdir}
%ghost      %attr(-,qmaill,nofiles)     %{logdir}/*
%attr(755,root,root)                    %{_prefix}/bin/mpdev
%attr(755,root,root)                    %{_prefix}/bin/mpdplaylist
%attr(755,root,root)                    %{_prefix}/bin/romprhist
%attr(755,root,root)                    %{_prefix}/bin/transfer_play
%attr(755,root,root)                    %{_prefix}/bin/lastfm-scrobbler
%attr(755,root,root)                    %{_prefix}/bin/librefm-scrobbler
%attr(755,root,root)                    %{_prefix}/libexec/mpdev/mpdev_update
%attr(755,root,root)                    %{_prefix}/libexec/mpdev/mpdev_cleanup
%attr(755,root,root)                    %{_prefix}/libexec/mpdev/mpdev_rename
%attr(755,root,root)                    %{_prefix}/libexec/mpdev/mpdev_maintenance
%attr(755,root,root)                    %{_prefix}/libexec/mpdev/create_service
%attr(755,root,root)                    %{_prefix}/libexec/mpdev/player
%attr(755,root,root)                    %{_prefix}/libexec/mpdev/playpause
%attr(644,root,root) %config(noreplace) %{sysconfdir}/%{name}-release
%attr(644,root,root) %config(noreplace) %{sysconfdir}/%{name}-rpm.info

%attr(644,root,root)                    %{_prefix}/share/man/man1/mpdev.1.gz
%attr(644,root,root)                    %{_prefix}/share/man/man1/mpdev_update.1.gz
%attr(644,root,root)                    %{_prefix}/share/man/man1/mpdev_cleanup.1.gz
%attr(644,root,root)                    %{_prefix}/share/man/man1/mpdplaylist.1.gz
%attr(644,root,root)                    %{_prefix}/share/man/man1/lastfm-scrobbler.1.gz
%attr(644,root,root)                    %{_prefix}/share/man/man1/librefm-scrobbler.1.gz

%license LICENSE

%pretrans
# stop mpdev services before upgrade
if [ -d /run ] ; then
  rundir=/run/svscan
elif [ -d /var/run ] ; then
  rundir=/var/run/svscan
else
  rundir=/service
fi
%{_prefix}/bin/svstat /service/mpdev >/dev/null 2>&1
if [ $? -eq 0 ] ; then
  %{__mkdir_p} ${rundir}/mpdev
  %{_prefix}/bin/svc -d /service/mpdev
  touch ${rundir}/mpdev/.down
fi

%post
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -z "$argv1" ] ; then
  argv1=0
fi
# we are doing upgrade
if [ $argv1 -eq 2 ] ; then # upgrade
  # refresh indimail services
  %{_prefix}/sbin/minisvc --servicedir=/service --refreshsvc="/service/mpdev"
  %{_prefix}/bin/svok /service/mpdev >/dev/null 2>&1
  if [ $? -eq 0 -a -f ${rundir}/$i/.down ] ; then
    %{__rm} -f ${rundir}/$i/.down
    %{_prefix}/bin/svc -u /service/mpdev
  fi
  exit 0
fi
/usr/libexec/mpdev/create_service --servicedir=/service --user=1000 --add-service

%preun
argv1=$1
ID=$(id -u)
if [ $ID -ne 0 ] ; then
  echo "You are not root" 1>&2
  exit 1
fi
if [ -z "$argv1" ] ; then
  argv1=0
fi
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi
echo "removing mpdev logs"
log_dir=%{logdir}
[ "$log_dir" != "/" ] && %{__rm} -fr $log_dir
echo "stopping and removing mpdev service"
/usr/libexec/mpdev/create_service --servicedir=/service --del-service

%changelog
