#!/bin/sh
# postinst script for mpdev
#
# see: dh_installdeb(1)

set -e
prefix=@prefix@
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


upgrade=0
case "$1" in
    configure)
	if [ " $2" = " " ] ; then
		echo "installing mpdev @version@"
	else
		upgrade=1
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#
if [ $upgrade -eq 1 ] ; then # upgrade
	# refresh mpdev services
	if [ ! -f /service/mpdev/variables/.options ] ; then
	mkdir -p /service/mpdev/variables
	echo "/usr/libexec/mpdev/create_service --servicedir=/service --user=1000 --add-service" \
		> /service/mpdev/variables/.options
	fi
	${prefix}/sbin/minisvc --servicedir=/service --refreshsvc="/service/mpdev"
	# start mpdev services after upgrade
	if [ -d /run ] ; then
		rundir=/run/svscan
	elif [ -d /var/run ] ; then
		rundir=/var/run/svscan
	else
		rundir=/service
	fi
	set +e
	${prefix}/bin/svok /service/mpdev >/dev/null 2>&1
	if [ $? -eq 0 -a -f ${rundir}/mpdev/.down ] ; then
		rm -f ${rundir}/mpdev/.down
		${prefix}/bin/svc -u /service/mpdev
	fi
	set -e
	exit 0
fi
${prefix}/libexec/mpdev/create_service --servicedir=/service --user=1000 --add-service
exit 0
