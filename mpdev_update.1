.TH mpdev_update 1 "December 23, 2009" "manual"
.SH NAME
.PP
mpdev_update - Update stats, sticker sqlite db from mpd database
.SH SYNOPSIS
.PP
mpdev_update [\f[I]option\f[]]

.SH DESCRIPTION
.PP
\fBmpdev_update\fR creates/updates stats.db or sticker.db from the
\fBmpd\fR(1) database. It sends the \fIlistinfo\fR command to mpd to
get list of all music files.

.SH OPTIONS
.TP 3
.B -v
Set verbose output. You can increase verbosity by specifying it multiple times
.RS
.RE

.TP 3
\fB-i\fR \fIIP\fR
IP address of mpd host if different from localhost
.RS
.RE

.TP 3
\fB-p\fR \fIport\fR
port on which mpd(1) is listening if different from 6600
.RS
.RE

.TP 3
\fB-s\fR \fIunix_socket\fR
Unix domain socket in case you don't want to use \fIIP\fR and \fIport\fR
.RS
.RE

.TP 3
\fB-d\fR \fIdb_file_path\fR
full path to the sqlite3(1) stats database
.RS
.RE

.TP 3
\fB-D\fR \fI0\fR | \fI1\fR
0 to insert new records in stats.db, 1 to insert new records in sticker.db
.RS
.RE

.TP 3
.B -U
Use update mode. The default is to use insert mode.
.RS
.RE

.TP 3
\fB-m\fR \fImusic_directory\fR
Full path to the \fImusic_directory\fR in the mpd.conf(5) configuration file.
This option uses stat(2) on every music file to get the \fIst_mtime\fR
field. This option will make the \fBmpdev_update\fR slower due to stat(2) call
on each file. The \fIst_mtime\fR is used to compute the \fIdate_added\fR field.
.RS
.RE

.TP 3
\fB-j\fR 
Puts the journal in volatile memory. This saves disk I/O but at the expense
of database safety and integrity. If the application using SQLite crashes
in the middle of a transaction when the MEMORY journaling mode is set, then
the database file will very likely go corrupt.
.RS
.RE

.TP 3
\fB-t\fR 
Turns on transaction mode at the beginning. This improves performance. But if
the application crashes in the middle, all new changes will be lost
.RS
.RE

.TP 3
\fB-S\fR 
Turns Off synchronous mode.
With synchronous OFF, \fBmpdev_update\fR continues without syncing as soon
as it has handed data off to the operating system. In case \fBmpdev_update\fR 
crashes, the data will be safe, but the database might become corrupted if
the operating system crashes or the computer loses power before that data
has been written to the disk. On the other hand, commits can be orders of
magnitude faster with synchronous OFF.
.RS
.RE

.TP 3
\fB-P\fR 
Print SQL statements used during db creation
.RS
.RE

Examples
1. create stats.db in the current directory

.EX
$ mpdev_update -S -j -t -D 0 -d stats.db
Processed 42630 rows, Failures 0 rows, Updated 42636 rows

real    0m0.830s
user    0m0.405s
sys     0m0.096s
.EE

2. Update stats.db in the current directory and add 6 new songs
.EX
$ mpdev_update -S -j -t -D 0 -d stats.db
Processed 42636 rows, Failures 0 rows, Updated 6 rows

real    0m0.725s
user    0m0.353s
sys     0m0.067s
.EE

.SH REPORTING BUGS
.PP
If you find a bug, please report it at https://github.com/mbhangui/mpdev/issues

.SH COPYRIGHT
.PP
Copyright (c) 2020 Manvendra Bhangui <mpdev@indimail.org>
.PD 0
.P
.PD
Free
use of this software is granted under the terms of the GNU General
Public License (GPLv2).
.SH AUTHOR
Manvendra Bhangui <manvendra@indimail.org>

.SH SEE ALSO
mpd(1),
sqlite3(1),
mpdev_cleanup(1),
mpdev(1),
stat(2)
