.TH mpdev 1 "December 23, 2009" "manual"
.SH NAME
.PP
mpdev - mpd Event Watcher
.SH SYNOPSIS
.PP
mpdev [\f[I]option\f[]]

.SH DESCRIPTION

mpdev is a mpd event watcher. It connects to mpd, waits for idle events.
By default it will get the host name and port for mpd from
\f[B]MPD_HOST\f[] and \f[B]MPD_PORT\f[] environment variables.
\f[B]MPD_PASSWORD\f[] environment variable can be set to make mpdev connect
to a password-protected mpd. If these environment variables aren't set,
mpdev connects to localhost on port 6600.

.SH OPTIONS
.TP
.B -v
Set verbose output. You can increase verbosity by specifying it multiple times
.RS
.RE

.TP
\fB-h\fR \fIhost\fR / \fIIP\fR
Host or IP address of mpd host if different from localhost
.RS
.RE

.TP
\fB-p\fR \fIport\fR
port on which mpd(1) is listening if different from 6600
.RS
.RE

.TP
\fB-s\fR \fIunix_socket\fR
Unix domain socket in case you don't want to use \fIIP\fR and \fIport\fR
.RS
.RE

.TP
\fB-r\fR \fIretry_interval\fR
Retry interval in seconds in case \fBmpd\fR(1) is done
.RS
.RE

.SH HOOKS
You can create scripts in $HOME/.mpdev directory. The default installation
installs a script named $HOME/.mpdev/player for the uid 1000. The script does
the following

.IP \[bu] 4
scrobbles titles to last.fm and libre.fm. You have to create API keys by running
lastfm-scrobbler and librefm-scrobbler one time. You can disable scrobbling by
setting DISABLE_SCROBBLE environment variable
.sp -1
.IP \[bu]
updates play counts in the sqlite stats.db and
[RompR](https://fatg3erman.github.io/RompR/) db
.sp -1
.IP \[bu]
Synchronizes the ratings in the sticker (sqlite),
[RompR](https://fatg3erman.github.io/RompR/) (MySQL) and the stats (sqlite)
databases. It also initializes the rating to 3 when you play an unrated song.
.PP

The above three are actually done by running a hook, a script named `player` in $HOME/.mpdev directory. You can put your own script named `player` in this directory. In fact mpdev can run specific hooks for specific types of mpd events. A hook can be any executable program or script. It will be passed arguments and have certain environment variables related to the song playing, available to it. Below is a list of of events and corresping hooks that will be executed if available.

.TS
l l.
MPD EVENT             | Hook script
_
SONG_CHANGE           | ~/.mpdev/player
PLAY/PAUSE            | ~/.mpdev/playpause
STICKER_EVENT         | ~/.mpdev/sticker
MIXER_EVENT           | ~/.mpdev/mixer
OPTIONS_EVENT         | ~/.mpdev/options
OUTPUT_EVENT          | ~/.mpdev/output
UPDATE_EVENT          | ~/.mpdev/update
DATABASE_EVENT        | ~/.mpdev/database
PLAYLIST_EVENT        | ~/.mpdev/playlist
STORED_PLAYLIST_EVENT | ~/.mpdev/stored_playlist
PARTITION_EVENT       | ~/.mpdev/partition
SUBSCRIPTION_EVENT    | ~/.mpdev/subscription
MESSAGE_EVENT         | ~/.mpdev/message
MOUNT_EVENT           | ~/.mpdev/mount
NEIGHBOUR_EVENT       | ~/.mpdev/neighbour
CUSTOM_EVENT          | ~/.mpdev/custom
.TE

The hooks are passed the following arguments

.IP \[bu] 4
mpd-event      - Passed when the above events listed, apart from SONG_CHANGE happen.
.sp -1
.IP \[bu]
player-event   - Passwd when you play/pause player
.sp -1
.IP \[bu]
playlist-event - Passwd when the playlist changes
.sp -1
.IP \[bu]
now-playing    - Passed when a song starts playing
.sp -1
.IP \[bu]
end-song       - Passed when a song finishes playing

.SH Environment Variables

mpdev sets the following environment variables

.EX
SONG_ID            - Set to the ID from mpd database
SONG_URI           - Set to the full path of the music file
SONG_TITLE         - Set to the title of the song
SONG_ARTIST        - Set to the song artist
SONG_ALBUM         - Set to the song album
SONG_DATE          - Set to the Date tag of the song
SONG_GENRE         - Set to the Genre tag of the song
SONG_TRACK         - Set to the track number of the song
SONG_DURATION      - Set to the song duration
ELAPSED_TIME       - Total time elapsed within the current song in seconds,
                     but with higher resolution
SONG_PLAYED        - Set to the duration for which the song was played
SONG_LAST_MODIFIED - Set to the last modified time of the song
START_TIME         - Time at which the song play started
END_TIME           - Time at which the song ended
PLAYER_STATE       - Set when you pause/resume player
VERBOSE            - Set to the verbose field
.EE

if \fI$HOME/.config/lastfm-scrobbler\fR & \fI$HOME/.config/librefm-scrobbler\fR
are present, mpdev sets SCROBBLER_LASTFM and SCROBBLER_LIBREFM environment
variables respectively. This get created when you create API keys for lastfm,
librefm by running lastfm-scrobbler and librefm-scrobbler one time with
--connect argument.

.SH FILES

.IP \[bu] 2
\f[B]~/.mpdev/player\f[] User Script that will be run everytime song plays.
This script is passed the argument now-playing when a new song starts and
end-song when the song ends.

.SH SEE ALSO
.IP \[bu] 2
\f[B]mpd\f[](1),
\f[B]sqlite3\f[](1),
\f[B]lastfm-scrobbler\f[](1),
\f[B]librefm-scrobbler\f[](1),
.IP \[bu] 2
https://github.com/mbhangui/mpdev/

.SH REPORTING BUGS
.PP
If you find a bug, please report it at https://github.com/mbhangui/mpdev/issues

.SH COPYRIGHT
.PP
Copyright (c) 2020 Manvendra Bhangui <mpdev@indimail.org>
.PD 0
.P
.PD
Free
use of this software is granted under the terms of the GNU General
Public License (GPLv2).
.SH AUTHOR
Manvendra Bhangui <manvendra@indimail.org>
